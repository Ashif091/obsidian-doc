{
	"nodes":[
		{"id":"2648bca26838e681","type":"group","x":-840,"y":240,"width":1280,"height":469,"label":"Mention inline tag"},
		{"id":"4312667e94b0b843","type":"text","text":"# selected text access \n```ts\ngetSelectedText(): string;\n \n// Usage\nconst text = editor.getSelectedText();\n```","x":-680,"y":-560,"width":480,"height":190},
		{"id":"ef4519f984fe4349","type":"text","text":"#  Accessing Selected Link\n```ts\ngetSelectedLink(): string | undefined;\n \n// Usage\nconst linkUrl = editor.getSelectedLink();\n```","x":-160,"y":-560,"width":480,"height":190},
		{"id":"c4b123540e9d5e01","type":"text","text":"# editor.createLink?\n# editor.getSelectedText?","x":-640,"y":-280,"width":440,"height":360},
		{"id":"99144c9e15ae9496","type":"text","text":"```ts\nimport {\n  BlockNoteSchema,\n  defaultInlineContentSpecs,\n  filterSuggestionItems,\n} from \"@blocknote/core\";\nimport \"@blocknote/core/fonts/inter.css\";\nimport { BlockNoteView } from \"@blocknote/mantine\";\nimport \"@blocknote/mantine/style.css\";\nimport {\n  DefaultReactSuggestionItem,\n  SuggestionMenuController,\n  useCreateBlockNote,\n} from \"@blocknote/react\";\n \nimport { Mention } from \"./Mention\";\n \n// Our schema with inline content specs, which contain the configs and\n// implementations for inline content  that we want our editor to use.\nconst schema = BlockNoteSchema.create({\n  inlineContentSpecs: {\n    // Adds all default inline content.\n    ...defaultInlineContentSpecs,\n    // Adds the mention tag.\n    mention: Mention,\n  },\n});\n \n// Function which gets all users for the mentions menu.\nconst getMentionMenuItems = (\n  editor: typeof schema.BlockNoteEditor\n): DefaultReactSuggestionItem[] => {\n  const users = [\"Steve\", \"Bob\", \"Joe\", \"Mike\"];\n \n  return users.map((user) => ({\n    title: user,\n    onItemClick: () => {\n      editor.insertInlineContent([\n        {\n          type: \"mention\",\n          props: {\n            user,\n          },\n        },\n        \" \", // add a space after the mention\n      ]);\n    },\n  }));\n};\n \nexport function App() {\n  const editor = useCreateBlockNote({\n    schema,\n    initialContent: [\n      {\n        type: \"paragraph\",\n        content: \"Welcome to this demo!\",\n      },\n      {\n        type: \"paragraph\",\n        content: [\n          {\n            type: \"mention\",\n            props: {\n              user: \"Steve\",\n            },\n          },\n          {\n            type: \"text\",\n            text: \" <- This is an example mention\",\n            styles: {},\n          },\n        ],\n      },\n      {\n        type: \"paragraph\",\n        content: \"Press the '@' key to open the mentions menu and add another\",\n      },\n      {\n        type: \"paragraph\",\n      },\n    ],\n  });\n \n  return (\n    <BlockNoteView editor={editor}>\n      {/* Adds a mentions menu which opens with the \"@\" key */}\n      <SuggestionMenuController\n        triggerCharacter={\"@\"}\n        getItems={async (query) =>\n          // Gets the mentions menu items\n          filterSuggestionItems(getMentionMenuItems(editor), query)\n        }\n      />\n    </BlockNoteView>\n  );\n}\n \nexport default App;\n \n```","x":-140,"y":260,"width":560,"height":316},
		{"id":"b1d32850e36c193f","type":"text","text":"# mention \n```ts\nimport { createReactInlineContentSpec } from \"@blocknote/react\";\n \n// The Mention inline content.\nexport const Mention = createReactInlineContentSpec(\n  {\n    type: \"mention\",\n    propSchema: {\n      user: {\n        default: \"Unknown\",\n      },\n    },\n    content: \"none\",\n  },\n  {\n    render: (props) => (\n      <span style={{ backgroundColor: \"#8400ff33\" }}>\n        @{props.inlineContent.props.user}\n      </span>\n    ),\n  }\n);\n \n```","x":-780,"y":260,"width":489,"height":353},
		{"id":"e10209fc5ecc433e","x":-325,"y":920,"width":250,"height":60,"type":"text","text":""}
	],
	"edges":[
		{"id":"cf8d07d5288cd85c","fromNode":"b1d32850e36c193f","fromSide":"right","toNode":"99144c9e15ae9496","toSide":"left"}
	]
}