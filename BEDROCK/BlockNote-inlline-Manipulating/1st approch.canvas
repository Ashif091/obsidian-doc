{
	"nodes":[
		{"id":"54a8141d827a46fd","x":-396,"y":-53,"width":676,"height":573,"type":"text","text":"```ts\n'use client'\n\nimport { useEffect, useState } from \"react\"\nimport { BlockNoteEditor, PartialBlock } from \"@blocknote/core\"\nimport \"@blocknote/core/fonts/inter.css\"\nimport { useCreateBlockNote } from \"@blocknote/react\"\nimport { BlockNoteView } from \"@blocknote/mantine\"\nimport \"@blocknote/mantine/style.css\"\nimport { LiveblocksYjsProvider } from \"@liveblocks/yjs\"\nimport * as Y from \"yjs\"\nimport { useRoom, useSelf } from \"@liveblocks/react/suspense\"\nimport stringToColor from \"../lib/stringToColor\"\nimport { useEdgeStore } from \"@/lib/edgestore\"\nimport Settings from \"./settings/settings\"\nimport { useRouter } from 'next/router'\n\ntype EditorProps = {\n  doc: Y.Doc\n  provider: any\n}\n\nfunction Editor() {\n  const room = useRoom()\n  const [doc, setDoc] = useState<Y.Doc>()\n  const [provider, setProvider] = useState<LiveblocksYjsProvider>()\n\n  useEffect(() => {\n    const yDoc = new Y.Doc()\n    const yProvider = new LiveblocksYjsProvider(room, yDoc)\n    setDoc(yDoc)\n    setProvider(yProvider)\n\n    return () => {\n      yDoc?.destroy()\n      yProvider?.destroy()\n    }\n  }, [room])\n\n  if (!doc || !provider) {\n    return null\n  }\n\n  return (\n    <div className=\"items-center\">\n      <BlockNote doc={doc} provider={provider} />\n    </div>\n  )\n}\n\nfunction BlockNote({ doc, provider }: EditorProps) {\n  const userInfo = useSelf((me) => me.info)\n  const { edgestore } = useEdgeStore()\n  const router = useRouter()\n\n  const handleUpload = async (file: File) => {\n    const response = await edgestore.publicFiles.upload({\n      file,\n    });\n    return response.url;\n  };\n\n  const handleLinkTo = async (editor: BlockNoteEditor) => {\n    const selectedText = editor.getSelectedText()\n    if (selectedText) {\n      try {\n        const response = await fetch('/api/create-document', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ title: selectedText }),\n        })\n        const data = await response.json()\n        if (data.id) {\n          editor.updateBlock(editor.getTextCursorPosition().block, {\n            type: \"link\",\n            props: { href: `/document/${data.id}` },\n          })\n        }\n      } catch (error) {\n        console.error('Error creating document:', error)\n      }\n    }\n  }\n\n  const editor: BlockNoteEditor = useCreateBlockNote({\n    collaboration: {\n      provider,\n      fragment: doc.getXmlFragment(\"document-store\"),\n      user: {\n        name: userInfo.name,\n        color: stringToColor(userInfo.email),\n      },\n    },\n    uploadFile: handleUpload,\n    onEditorContentChange: (editor) => {\n      const blocks = editor.topLevelBlocks\n      blocks.forEach((block) => {\n        if (block.type === 'link' && block.props.href) {\n          block.props.onClick = () => router.push(block.props.href)\n        }\n      })\n    },\n  })\n\n  const customSlashMenuItems = [\n    {\n      name: \"Link To\",\n      execute: () => handleLinkTo(editor),\n    },\n  ]\n\n  return (\n    <BlockNoteView\n      className=\"\"\n      theme=\"dark\"\n      editor={editor}\n      slashMenuItems={customSlashMenuItems}\n    />\n  )\n}\n\nexport default Editor\n```"},
		{"id":"bf1e69eaaaaf8e2f","x":-1200,"y":-160,"width":580,"height":260,"type":"text","text":"```js\n    onEditorContentChange: (editor) => {\n      const blocks = editor.topLevelBlocks\n      blocks.forEach((block) => {\n        if (block.type === 'link' && block.props.href) {\n          block.props.onClick = () => router.push(block.props.href)\n        }\n      })\n    },\n```"},
		{"id":"02118a7382943cee","x":-120,"y":-200,"width":900,"height":50,"type":"text","text":"#  no such onEditorContentChange method in createblocknote"}
	],
	"edges":[
		{"id":"a877ddb92ff07620","fromNode":"bf1e69eaaaaf8e2f","fromSide":"right","toNode":"54a8141d827a46fd","toSide":"left"},
		{"id":"d924440593434a05","fromNode":"bf1e69eaaaaf8e2f","fromSide":"right","toNode":"02118a7382943cee","toSide":"left"}
	]
}